{"version":3,"sources":["services/httpService.js","services/userService.js","store/actions/userActions.js","cmps/AppHeader/AppHeader.jsx","cmps/MovePreview/MovePreview.jsx","cmps/MoveList/MoveList.jsx","cmps/TransferFund/TransferFund.jsx","services/contactService.js","store/actions/contactActions.js","pages/ContactDetailsPage/ContactDetailsPage.jsx","pages/ContactEditPage/ContactEditPage.jsx","cmps/ContactFilter/ContactFilter.jsx","cmps/ContactPreview/ContactPreview.jsx","cmps/ContactList/ContactList.jsx","pages/ContactPage/ContactPage.jsx","services/bitcoinService.js","assets/imgs/home.jpg","pages/HomePage/HomePage.jsx","pages/SignupPage/SignupPage.jsx","cmps/Chart/Chart.jsx","pages/StatisticPage/StatisticPage.jsx","App.js","reportWebVitals.js","store/reducers/contactReducer.js","store/reducers/userReducer.js","store/index.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","userService","getUsers","getById","userId","remove","update","login","signup","logout","getLoggedInUser","addTransfer","user","_id","_saveLocalUser","userCred","sessionStorage","clear","JSON","parse","getItem","contactId","amount","setItem","stringify","window","setLoggedInUser","dispatch","loggedInUser","type","AppHeader","loggedUser","useSelector","state","userReducer","history","useHistory","useDispatch","className","onClick","push","exact","to","activeClassName","MovePreview","move","Date","at","toLocaleDateString","MoveList","moves","map","idx","TransferFund","contact","onTransferCoins","match","useState","transferAmount","setTransferAmount","name","onSubmit","ev","htmlFor","required","id","onChange","target","value","contactService","getContacts","getContactById","deleteContact","saveContact","getEmptyContact","email","phone","addContact","CONTACT_URL","sort","arr","b","toLocaleLowerCase","filterBy","contacts","contactsToReturn","filter","username","updatedContact","term","includes","ContactDetailsPage","props","contactReducer","currContact","userToContactMoves","setUserToContactMoves","useEffect","contactMoves","toId","src","alt","preventDefault","coins","alert","updatedUser","ContactEditPage","setContact","loadContact","handleChange","field","onRemoveContact","isAdd","contactName","contactEmail","contactPhone","ContactFilter","onChangeFilter","placeholder","ContactPreview","ContactList","ContactPage","setFilterBy","setContactName","require","bitcoinService","getRate","getMarketPrice","getConfirmedTransactions","get","error","HomePage","bitcoinRate","setBitcoinRate","loadBitcoinRate","fetchRate","fullname","HomePageImg","SignupPage","setUserCred","Chart","title","description","color","StatisticPage","marketPrice","setMarketPrice","marketPriceValues","getMarketPriceValues","loadMarketPrice","values","y","App","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8hBAEMA,EACA,QAIFC,E,OAAQC,EAAMC,OAAO,CACrBC,iBAAiB,IAGRC,EAAc,SACnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IAFxBF,EAAc,SAIlBC,EAAUC,GACX,OAAOC,EAAKF,EAAU,OAAQC,IALzBF,EAAc,SAOnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IARxBF,EAAc,SAUhBC,EAAUC,GACb,OAAOC,EAAKF,EAAU,SAAUC,I,SAIzBC,E,8EAAf,WAAoBF,GAApB,+BAAAG,EAAA,6DAA8BC,EAA9B,+BAAuC,MAAOH,EAA9C,+BAAqD,KAArD,kBAE0BN,EAAM,CACpBU,IAAI,GAAD,OAAKX,GAAL,OAAgBM,GACnBI,SACAH,OACAK,OAAoB,QAAXF,EAAoBH,EAAO,OANhD,cAEcM,EAFd,yBAQeA,EAAIN,MARnB,sCAUQO,QAAQC,IAAR,qBAA0BL,EAA1B,yCAAiEJ,EAAjE,wBAAyFC,IACzFO,QAAQE,IAAR,MACI,KAAIC,UAAY,KAAIA,SAASC,OAZzC,8D,wBCvBO,IAAMC,EAAc,CACzBC,SAaF,WAEE,OAAOf,EAAA,SAdPgB,QAiBF,SAAiBC,GAEf,OAAOjB,EAAA,eAAwBiB,KAlB/BC,OAqBF,SAAgBD,GAEd,OAAOjB,EAAA,eAA2BiB,KAtBlCE,O,4CACAC,M,4CACAC,O,4CACAC,O,2CACAC,kBACAC,Y,2FAoBF,WAAsBC,GAAtB,SAAArB,EAAA,sEAEeJ,EAAA,eAAwByB,EAAKC,KAAOD,GAFnD,OAEEA,EAFF,OAIMF,IAAkBG,MAAQD,EAAKC,KAAKC,EAAeF,GAJzD,4C,kEAOA,WAAqBG,GAArB,eAAAxB,EAAA,sEAKqBJ,EAAiB,aAAc4B,GALpD,YAKQH,EALR,iDAMmBE,EAAeF,IANlC,4C,kEASA,WAAsBG,GAAtB,eAAAxB,EAAA,sEAEqBJ,EAAiB,cAAe4B,GAFrD,cAEQH,EAFR,yBAGSE,EAAeF,IAHxB,4C,kEAMA,sBAAArB,EAAA,6DACEyB,eAAeC,QADjB,SAEe9B,EAAiB,eAFhC,oF,sBAKA,SAASuB,IACP,OAAOQ,KAAKC,MAAMH,eAAeI,QAAQ,iBAAmB,Q,4CAG9D,WAA2BC,EAAWC,GAAtC,SAAA/B,EAAA,sEACeJ,EAAA,YAA8B,CAAEkC,YAAWC,WAD1D,oF,sBAIA,SAASR,EAAeF,GAEtB,OADAI,eAAeO,QAAQ,eAAgBL,KAAKM,UAAUZ,IAC/CA,EAtDTa,OAAOxB,YAAcA,ECbd,IAaMyB,EAAkB,WAC7B,8CAAO,WAAOC,GAAP,eAAApC,EAAA,sEAEsBU,EAAYS,kBAFlC,OAECkB,EAFD,OAGLD,EAAS,CAAEE,KAAM,WAAYjB,KAAMgB,IAH9B,2CAAP,uD,OCTWE,EAAY,WACvB,IAAMC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYtB,QACtDuB,EAAUC,cACVT,EAAWU,cAOjB,OACE,sBAAKC,UAAU,2BAAf,UACE,qBAAKC,QARQ,kBAAMJ,EAAQK,KAAK,MAQRF,UAAU,WAAlC,SACE,kDAEF,+BACE,6BACE,cAAC,IAAD,CAASG,OAAK,EAACC,GAAG,IAAIC,gBAAgB,aAAtC,oBAIF,6BACE,cAAC,IAAD,CAASD,GAAG,WAAWC,gBAAgB,aAAvC,wBAIF,6BACE,cAAC,IAAD,CAASD,GAAG,aAAaC,gBAAgB,aAAzC,0BAIF,6BACIZ,EAKA,cAAC,IAAD,CAASW,GAAG,IAAIC,gBAAgB,aAAaJ,QA/BtC,WACfZ,EDSF,uCAAO,WAAOA,GAAP,SAAApC,EAAA,sEACCU,EAAYQ,SADb,OAELkB,EAAS,CAAEE,KAAM,WAFZ,2CAAP,wDCqBU,oBAJA,cAAC,IAAD,CAASa,GAAG,UAAUC,gBAAgB,aAAtC,6B,OCtCCC,G,MAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5B,OACE,qBAAIP,UAAU,eAAd,UACE,qCAAQ,IAAIQ,KAAKD,EAAKE,IAAIC,wBAC1B,0CAAaH,EAAKvB,OAAlB,YCHO2B,G,MAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,yBAASZ,UAAU,YAAnB,SAEE,6BACGY,EAAMC,KAAI,SAACN,EAAMO,GAAP,OACT,cAAC,EAAD,CAAaP,KAAMA,GAAWO,YCL3BC,G,MAAe,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,gBACtC,GADmE,EAAZC,MACXC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACMxB,EAAUC,cAYhB,OACE,0BAASE,UAAU,gBAAnB,UACE,oDAAuBgB,EAAQM,KAA/B,OACA,uBAAMC,SAbY,SAACC,GACrBP,EAAgBG,EAAgBI,GAChC3B,EAAQK,KAAK,aAWX,UACE,uBAAOuB,QAAQ,SAAf,qBACA,uBAAOC,UAAQ,EAACnC,KAAK,SAASoC,GAAG,SAASC,SAV3B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChBC,EAAwB,WAAhBD,EAAOtC,MAAqBsC,EAAOC,MAAQD,EAAOC,MAChET,EAAkBS,MASd,sDCrBKC,EAAiB,CAC5BC,Y,2CACAC,e,4CACAC,c,4CACAC,Y,4CACAC,gBA6MF,WACE,MAAO,CACLd,KAAM,GACNe,MAAO,GACPC,MAAO,KAhNTC,W,6CA0HIC,EAAc,WAIpB,SAASC,EAAKC,GACZ,OAAOA,EAAID,MAAK,SAACxF,EAAG0F,GAClB,OAAI1F,EAAEqE,KAAKsB,oBAAsBD,EAAErB,KAAKsB,qBAC9B,EAEN3F,EAAEqE,KAAKsB,oBAAsBD,EAAErB,KAAKsB,oBAC/B,EAEF,K,4CAIX,4CAAA3F,EAAA,6DAA2B4F,EAA3B,+BAAsC,KAAtC,kBAI2BhG,EAAgB2F,GAJ3C,UAIUM,EAJV,QAKQD,EALR,uBAMME,EAAmBC,EAAOH,EAAUC,GAN1C,kBAOaL,EAAKM,IAPlB,gCAUWD,GAVX,kCAYIxF,QAAQC,IAAI,oBAAZ,MAZJ,0D,oEAgBA,WAA8BoE,GAA9B,eAAA1E,EAAA,+EAG0BJ,EAAgB2F,EAAcb,GAHxD,cAGUX,EAHV,yBAIWA,GAJX,gCAMI1D,QAAQC,IAAR,qBAA0BoE,EAA1B,qBANJ,0D,kEAUA,WAA0BsB,GAA1B,eAAAhG,EAAA,+EAG0BJ,EAAiB2F,EAAa,CAAES,aAH1D,cAGUjC,EAHV,yBAIWA,GAJX,gCAMI1D,QAAQC,IAAR,2BAAgC0F,EAAhC,qBANJ,0D,kEAUA,WAA6BtB,GAA7B,SAAA1E,EAAA,+EAEiBJ,EAAmB2F,EAAcb,EAAIA,GAFtD,wEAOIrE,QAAQC,IAAR,8BAAmCoE,GAAnC,MAPJ,yD,kEAWA,WAA2BX,GAA3B,eAAA/D,EAAA,mEAGQ+D,EAAQzC,IAHhB,gCAK6B1B,EACrB2F,EAAcxB,EAAQzC,IACtByC,GAPR,OAKMkC,EALN,8CAW6BrG,EAAiB2F,EAAaxB,GAX3D,OAWMkC,EAXN,wCAaWA,GAbX,kCAeI5F,QAAQC,IAAR,4BAAiCyD,GAAjC,MAfJ,2D,sBA2BA,SAASgC,EAAOG,EAAML,GAEpB,OADAK,EAAOA,EAAKP,oBACLE,EAASE,QAAO,SAAChC,GACtB,OACEA,EAAQM,KAAKsB,oBAAoBQ,SAASD,IAC1CnC,EAAQsB,MAAMM,oBAAoBQ,SAASD,IAC3CnC,EAAQqB,MAAMO,oBAAoBQ,SAASD,M,MCjO1C,ICUME,EAAqB,SAACC,GACjC,IAAM7D,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYtB,QACtD0C,EAAUtB,aAAY,SAACC,GAAD,OAAWA,EAAM4D,eAAeC,eAC5D,EAAoDrC,mBAAS,IAA7D,mBAAOsC,EAAP,KAA2BC,EAA3B,KACMrE,EAAWU,cAEjB4D,qBAAU,WAAO,IAAD,EDTa5E,ECUrB6E,EAAY,OAAGnE,QAAH,IAAGA,GAAH,UAAGA,EAAYmB,aAAf,aAAG,EAAmBoC,QAAO,SAACzC,GAC9C,OAAOA,EAAKsD,OAASP,EAAMpC,MAAM9D,OAAOuE,MAIxCtC,EADEI,GDduBV,ECeDuE,EAAMpC,MAAM9D,OAAOuE,GDd/C,uCAAO,WAAOtC,GAAP,eAAApC,EAAA,sEACiB8E,EAAeE,eAAelD,GAD/C,OACCiC,EADD,OAEL3B,EAAS,CAAEE,KAAM,cAAeyB,YAF3B,2CAAP,uDCgBa5B,KAEPwE,GAAcF,EAAsBE,KACvC,CAACN,EAAMpC,MAAM9D,OAAOuE,KAgBvB,OAAKX,GACL1D,QAAQC,IAAI,CAAEyD,YAEZ,sBAAKhB,UAAU,uBAAf,UACE,uDACA,qBAAK8D,IAAG,+BAA0B9C,EAAQzC,KAAOwF,IAAI,KACrD,4BAAI/C,EAAQzC,MACZ,4BAAIyC,EAAQM,OACZ,4BAAIN,EAAQqB,QACZ,4BAAIrB,EAAQsB,QACZ,cAAC,EAAD,CAActB,QAASA,EAASC,gBAhBZ,SAACG,EAAgBI,GAEvC,GADAA,EAAGwC,iBACCvE,EAAWwE,MAAQ7C,EAAgB,OAAO8C,MAAM,mBPZ3B,IAACnF,EAAWC,EOarCK,GPb0BN,EOaHiC,EAAQzC,IPbMS,EOaDoC,EPZtC,uCAAO,WAAO/B,GAAP,eAAApC,EAAA,sEACqBU,EAAYU,YAAYU,EAAWC,GADxD,OACCmF,EADD,OAEL9E,EAAS,CAAEE,KAAM,WAAYjB,KAAM6F,IAF9B,2CAAP,2DO0BKV,GAAsB,cAAC,EAAD,CAAU7C,MAAO6C,IACxC,wBAAQxD,QA1BY,WACtBqD,EAAMzD,QAAQK,KAAK,aAyBjB,sBAZiB,wD,eCrCVkE,G,MAAkB,SAACd,GAC9B,IAAM7D,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYtB,QAC5D,EAA8B6C,mBAAS,MAAvC,mBAAOH,EAAP,KAAgBqD,EAAhB,KAEMhF,EAAWU,cAEjB4D,qBAAU,WACR,GAAIlE,EAAY,CACd,IAAMkC,EAAK2B,EAAMpC,MAAM9D,OAAOuE,GACxB2C,EAAW,uCAAG,WAAO3C,GAAP,eAAA1E,EAAA,0DACF0E,EADE,gCAERI,EAAeE,eAAeN,GAFtB,8CAGdI,EAAeK,kBAHD,OACZpB,EADY,KAIlBqD,EAAWrD,GAJO,2CAAH,sDAMjBsD,EAAY3C,QAEZtC,EAASD,OAEV,IAEH,IAAMmF,EAAe,SAAC,GAAgB,IAAd1C,EAAa,EAAbA,OAChB2C,EAAQ3C,EAAOP,KACfQ,EAAwB,WAAhBD,EAAOtC,MAAqBsC,EAAOC,MAAQD,EAAOC,MAChEuC,EAAW,2BAAKrD,GAAN,kBAAgBwD,EAAQ1C,MAG9B2C,EAAe,uCAAG,sBAAAxH,EAAA,sEAChB8E,EAAeG,cAAclB,EAAQzC,KADrB,OAEtB+E,EAAMzD,QAAQK,KAAK,YAFG,2CAAH,qDAerB,OAAKc,EAEH,sBAAKhB,UAAU,eAAf,UACE,wBAAQC,QAPK,WACfqD,EAAMzD,QAAQK,KAAd,mBAA+Bc,EAAQzC,OAMrC,kBACCyC,EAAQzC,KAAO,wBAAQ0B,QAASwE,EAAjB,oBAChB,uBAAMlD,SAfY,SAACC,GACrBA,EAAGwC,iBACH3E,EFpBuB,SAAC2B,GAC1B,8CAAO,WAAO3B,GAAP,iBAAApC,EAAA,6DACCyH,GAAS1D,EAAQzC,IADlB,SAEwBwD,EAAeI,YAAYnB,GAFnD,OAECkC,EAFD,OAGM7D,EAAPqF,EAAgB,CAAEnF,KAAM,cAAeyB,QAASkC,GACtC,CAAE3D,KAAM,iBAAkByB,QAASkC,IAJ5C,2CAAP,sDEmBWf,CAAYnB,IACrBsC,EAAMzD,QAAQK,KAAK,aAYjB,UACE,uBAAOuB,QAAQ,cAAf,kBACA,uBACEC,UAAQ,EACRnC,KAAK,OACLoC,GAAG,cACHG,MAAOd,EAAQ2D,YACf/C,SAAU2C,EACVjD,KAAK,gBAGP,uBAAOG,QAAQ,eAAf,2BACA,uBACEC,UAAQ,EACRnC,KAAK,OACLoC,GAAG,eACHG,MAAOd,EAAQ4D,aACfhD,SAAU2C,EACVjD,KAAK,iBAGP,uBAAOG,QAAQ,eAAf,0BACA,uBACEC,UAAQ,EACRnC,KAAK,OACLoC,GAAG,eACHG,MAAOd,EAAQ6D,aACfjD,SAAU2C,EACVjD,KAAK,iBAGP,sDApCe,qDChDVwD,G,MAAgB,SAACxB,GAK5B,OACE,uBAAMtD,UAAU,iBAAiBuB,SAAU,SAACC,GAAD,OAAQA,EAAGwC,kBAAtD,UACE,uBAAOvC,QAAQ,OAAf,4BACA,uBACElC,KAAK,OACLoC,GAAG,OACHL,KAAK,OACLM,SAXe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtByB,EAAMyB,eAAelD,EAAOC,QAWxBkD,YAAY,mBCZPC,G,MAAiB,SAAC,GAAiB,IAAfjE,EAAc,EAAdA,QAE/B,OADA1D,QAAQC,IAAI,CAAEyD,YAEZ,cAAC,IAAD,CAAMZ,GAAE,mBAAcY,EAAQzC,KAA9B,SACE,sBAAKyB,UAAU,kBAAf,UACE,qBAAK8D,IAAG,+BAA0B9C,EAAQzC,KAAOwF,IAAI,KACrD,uCAAU/C,EAAQiC,YAClB,wCAAWjC,EAAQqB,SACnB,+CAAkBrB,EAAQsB,gBCRrB4C,G,MAAc,SAAC,GAAkB,IAAhBpC,EAAe,EAAfA,SAC5B,OACE,oBAAI9C,UAAU,eAAd,SACG8C,EAASjC,KAAI,SAACG,GAAD,OACZ,6BACE,cAAC,EAAD,CAAgBA,QAASA,KADlBA,EAAQzC,YCCZ4G,G,MAAc,SAAC,GAAgB,EAAdtF,QAAe,IAC3C,EAAgCsB,mBAAS,MAAzC,mBAAO0B,EAAP,KAAiBuC,EAAjB,KACA,EAAsCjE,mBAAS,MAA/C,mBAAOwD,EAAP,KAAoBU,EAApB,KACM5F,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYtB,QACtDwE,EAAWpD,aAAY,SAACC,GAAD,OAAWA,EAAM4D,eAAeT,YACvD9B,EAAUtB,aAAY,SAACC,GAAD,OAAWA,EAAM4D,eAAeC,eACtDnE,EAAWU,cA4BjB,OAdA4D,qBAAU,cAAU,CAACgB,IAErBhB,qBAAU,WAENtE,EADEI,EN7BmB,SAACoD,GAC1B,8CAAO,WAAOxD,GAAP,eAAApC,EAAA,sEACkB8E,EAAeC,YAAYa,GAD7C,OACCC,EADD,OAELzD,EAAS,CAAEE,KAAM,eAAgBuD,aAF5B,2CAAP,sDM6Bad,CAAYa,GAEZzD,OAMV,CAAE4B,IAGHvB,GACE,sBAAKO,UAAU,eAAf,UACE,uBAAMuB,SA1BS,SAACC,GNJE,IAACyB,EMKvBzB,EAAGwC,iBACH3E,GNNuB4D,EMMH0B,ENLtB,uCAAO,WAAOtF,GAAP,eAAApC,EAAA,sEACiB8E,EAAeQ,WAAWU,GAD3C,OACCjC,EADD,OAEL3B,EAAS,CAAEE,KAAM,cAAeyB,YAF3B,2CAAP,yDM6BM,UACE,uBAAOS,QAAQ,cAAf,mCACA,uBACElC,KAAK,OACLoC,GAAG,cACHC,SA1BW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBwD,EAAexD,EAAOC,QA0BdR,KAAK,gBAEP,oDAGF,cAAC,EAAD,CAAeyD,eAxCA,SAAClC,GACpBuC,EAAYvC,MAwCPC,EACC,cAAC,EAAD,CAAaA,SAAUA,IAEvB,0DC5DJrG,GAAQ6I,EAAQ,IAETC,GAAiB,CAC5BC,Q,4CACAC,e,4CACAC,yB,2FAIF,4BAAAzI,EAAA,+EAE2BR,GAAMkJ,IAC3B,sDAHN,cAEUlI,EAFV,yBAKWA,EAASV,MALpB,gCAOIO,QAAQsI,MAAM,kDAAd,MAPJ,0D,oEAWA,4BAAA3I,EAAA,+EAE2BR,GAAMkJ,IAC3B,0FAHN,cAEUlI,EAFV,yBAKWA,EAASV,MALpB,gCAOIO,QAAQsI,MAAM,kDAAd,MAPJ,0D,oEAWA,4BAAA3I,EAAA,+EAE2BR,GAAMkJ,IAC3B,sDAHN,cAEUlI,EAFV,yBAKWA,EAASV,MALpB,gCAOIO,QAAQsI,MAAM,kDAAd,MAPJ,0D,sBC/Be,WAA0B,iCCQ5BC,I,MAAW,WACtB,MAAsC1E,mBAAS,GAA/C,mBAAO2E,EAAP,KAAoBC,EAApB,KACMtG,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYtB,QAEtDe,EAAWU,cAcjB,OAZA4D,qBAAU,WACR,IAAMqC,EAAe,uCAAG,4BAAA/I,EAAA,sEACEsI,GAAeC,UADjB,OAChBS,EADgB,OAEtBF,EAAeE,GAFO,2CAAH,qDAIrBD,IAEKvG,GACHJ,EAASD,OAEV,IAEEK,EAOH,sBAAKO,UAAU,YAAf,UACE,wCAAWP,EAAWyG,YACtB,2CAAczG,EAAWwE,MAAzB,YACA,+CAAkB6B,EAAlB,aACCrG,EAAWmB,OAAS,cAAC,EAAD,CAAUA,MAAOnB,EAAWmB,WATjD,8BACE,qBAAKkD,IAAKqC,GAAapC,IAAI,SCxBtBqC,I,MAAa,SAAC9C,GACzB,MAAgCnC,mBAAS,MAAzC,mBAAO1C,EAAP,KAAiB4H,EAAjB,KACMhH,EAAWU,cAEXwE,EAAe,SAAC,GAAgB,IAAd1C,EAAa,EAAbA,OAChB2C,EAAQ3C,EAAOP,KACfQ,EAAyB,WAAjBD,EAAOC,OAAsBD,EAAOC,MAAQD,EAAOC,MACjEuE,EAAY,2BAAK5H,GAAN,kBAAiB+F,EAAQ1C,MAetC,OACE,sBAAK9B,UAAU,cAAf,UACE,wCACA,uBAAMuB,SAfO,SAACC,GAChBA,EAAGwC,iBACH3E,EhBfkB,SAACZ,GACrB,8CAAO,WAAOY,GAAP,eAAApC,EAAA,sEACcU,EAAYO,OAAOO,GADjC,OACCH,EADD,OAELe,EAAS,CAAEE,KAAM,WAAYjB,SAFxB,2CAAP,sDgBcWJ,CAAOO,IAChB6E,EAAMzD,QAAQK,KAAK,MAYjB,UACE,uBAAOuB,QAAQ,WAAf,uBACA,uBACEC,UAAQ,EACRnC,KAAK,OACLoC,GAAG,WACHC,SAAU2C,EACVjD,KAAK,aAGP,uBAAOG,QAAQ,WAAf,uBACA,uBACEC,UAAQ,EACRnC,KAAK,OACLoC,GAAG,WACHC,SAAU2C,EACVjD,KAAK,aAGP,uBAAOG,QAAQ,WAAf,sBACA,uBACEC,UAAQ,EACRnC,KAAK,WACLoC,GAAG,WACHC,SAAU2C,EACVjD,KAAK,aAEP,uBAAOG,QAAQ,QAAf,mBACA,uBACEC,UAAQ,EACRnC,KAAK,OACLoC,GAAG,QACHC,SAAU2C,EACVjD,KAAK,UAEP,uBAAOG,QAAQ,QAAf,0BACA,uBACEC,UAAQ,EACRnC,KAAK,OACLoC,GAAG,QACHC,SAAU2C,EACVjD,KAAK,UAEP,6CACA,0BAGF,uCACA,uBAAMC,SAzDM,SAACC,GACfA,EAAGwC,iBACH3E,EhBfiB,SAACZ,GACpB,8CAAO,WAAOY,GAAP,eAAApC,EAAA,sEACcU,EAAYM,MAAMQ,GADhC,OACCH,EADD,OAELe,EAAS,CAAEE,KAAM,WAAYjB,SAFxB,2CAAP,sDgBcWL,CAAMQ,IACf6E,EAAMzD,QAAQK,KAAK,MAsDjB,UACE,uBAAOuB,QAAQ,WAAf,uBACA,uBACEC,UAAQ,EACRnC,KAAK,OACLoC,GAAG,WACHC,SAAU2C,EACVjD,KAAK,aAGP,uBAAOG,QAAQ,WAAf,sBACA,uBACEC,UAAQ,EACRnC,KAAK,WACLoC,GAAG,WACHC,SAAU2C,EACVjD,KAAK,aAEP,mD,SC7FKgF,I,MAAQ,SAAC,GAAiC,EAA/BC,MAAgC,IAAzBxJ,EAAwB,EAAxBA,KAAMyJ,EAAkB,EAAlBA,YACnC,OACE,gCACE,6BAAaA,IACb,cAAC,cAAD,CAAYzJ,KAAMA,EAAlB,SACE,cAAC,kBAAD,CAAgB0J,MAAM,eCHjBC,I,MAAgB,WAC3B,MAAsCvF,mBAAS,MAA/C,mBAAOwF,EAAP,KAAoBC,EAApB,KACA,EAAkDzF,mBAAS,MAA3D,mBAAO0F,EAAP,KAA0BC,EAA1B,KAgBA,OAdAnD,qBAAU,WACR,IAAMoD,EAAe,uCAAG,8BAAA9J,EAAA,+EAEMsI,GAAeE,iBAFrB,OAEdkB,EAFc,OAGpBC,EAAeD,GACTK,EAASL,EAAYK,OAAOnG,KAAI,SAACiB,GAAD,OAAWA,EAAMmF,KACvDH,EAAqBE,GALD,gDAOpB1J,QAAQC,IAAR,MAPoB,yDAAH,qDAUrBwJ,MACC,IAGDJ,GACAE,GACE,gCACE,iDACA,cAAC,GAAD,CACEN,MAAOI,EAAYrF,KACnBkF,YAAaG,EAAYH,YACzBzJ,KAAM8J,EACNJ,MAAO,aCtBJS,I,MAAM,WACjB,OACE,cAAC,IAAD,UACE,sBAAKlH,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmH,UAAW/C,EAAiBgD,KAAK,uBACxC,cAAC,IAAD,CAAOD,UAAW9D,EAAoB+D,KAAK,iBAC3C,cAAC,IAAD,CAAOD,UAAWhC,EAAaiC,KAAK,aACpC,cAAC,IAAD,CAAOD,UAAWT,GAAeU,KAAK,eACtC,cAAC,IAAD,CAAOD,UAAWf,GAAYgB,KAAK,YACnC,cAAC,IAAD,CAAOD,UAAWtB,GAAUuB,KAAK,gBCT5BC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCPRQ,GAAgB,CACpBhF,SAAU,GACVU,YAAa,MCFTsE,GAAgB,CACpBxJ,KAAM,M,SCIFyJ,GAAmB5I,OAAO6I,sCAAwCC,KAClEC,GAAcC,aAAgB,CAClC5E,eFF4B,WAAoC,IAAnC5D,EAAkC,uDAA1BmI,GAAeM,EAAW,uCAC/D,OAAQA,EAAO7I,MACb,IAAK,eACH,OAAO,2BACFI,GADL,IAEEmD,SAAUsF,EAAOtF,WAErB,IAAK,cACH,OAAO,2BACFnD,GADL,IAEE6D,YAAa4E,EAAOpH,UAGxB,IAAK,cACH,OAAO,2BACFrB,GADL,IAEEmD,SAAS,GAAD,oBAAMnD,EAAMmD,UAAZ,CAAsBsF,EAAOpH,YAEzC,IAAK,iBACH,OAAO,2BACFrB,GADL,IAEEmD,SAAUnD,EAAMmD,SAASE,QACvB,SAAChC,GAAD,OAAaA,EAAQzC,MAAQ6J,EAAOrJ,eAG1C,IAAK,iBACH,IAAWmE,EAAX,iBAA8BkF,GAC9B,OAAO,2BACFzI,GADL,IAEEmD,SAAUnD,EAAMmD,SAASjC,KAAI,SAACG,GAAD,OAC3BA,EAAQzC,MAAQ2E,EAAe3E,IAAM2E,EAAiBlC,OAG5D,QACE,OAAOrB,IE/BXC,YDJyB,WAAoC,IAAnCD,EAAkC,uDAA1BmI,GAAeM,EAAW,uCAE5D,OADA9K,QAAQC,IAAI6K,GACJA,EAAO7I,MACb,IAAK,WACH,OAAO,2BACFI,GADL,IAEErB,KAAM8J,EAAO9J,OAEjB,IAAK,SACH,OAAO,2BACFqB,GADL,IAEErB,KAAM,OAGV,QACE,OAAOqB,MCTA0I,GAAQC,aACnBJ,GACAH,GAAiBQ,aAAgBC,Q,MCJnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJO,SAASC,eAAe,SAM1BxB,O","file":"static/js/main.7e8adf3c.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            // window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n        }\r\n        throw err\r\n    }\r\n}","// import { storageService } from \"./async-storage.service\";\r\nimport { httpService } from \"./httpService\";\r\n\r\nexport const userService = {\r\n  getUsers,\r\n  getById,\r\n  remove,\r\n  update,\r\n  login,\r\n  signup,\r\n  logout,\r\n  getLoggedInUser,\r\n  addTransfer,\r\n};\r\n\r\nwindow.userService = userService;\r\n\r\nfunction getUsers() {\r\n  // return storageService.query(\"user\");\r\n  return httpService.get(`user`);\r\n}\r\n\r\nfunction getById(userId) {\r\n  // return storageService.get(\"user\", userId);\r\n  return httpService.get(`user/${userId}`);\r\n}\r\n\r\nfunction remove(userId) {\r\n  // return storageService.remove(\"user\", userId);\r\n  return httpService.delete(`user/${userId}`);\r\n}\r\n\r\nasync function update(user) {\r\n  // return storageService.put(\"user\", user);\r\n  user = await httpService.put(`user/${user._id}`, user);\r\n  // Handle case in which admin updates other user's details\r\n  if (getLoggedInUser()._id === user._id) _saveLocalUser(user);\r\n}\r\n\r\nasync function login(userCred) {\r\n  // const users = await storageService.query(\"user\");\r\n  // const user = users.find((user) => user.username === userCred.username);\r\n  // return _saveLocalUser(user);\r\n\r\n  const user = await httpService.post(\"auth/login\", userCred);\r\n  if (user) return _saveLocalUser(user);\r\n}\r\n\r\nasync function signup(userCred) {\r\n  // const user = await storageService.post(\"user\", userCred);\r\n  const user = await httpService.post(\"auth/signup\", userCred);\r\n  return _saveLocalUser(user);\r\n}\r\n\r\nasync function logout() {\r\n  sessionStorage.clear();\r\n  return await httpService.post(\"auth/logout\");\r\n}\r\n\r\nfunction getLoggedInUser() {\r\n  return JSON.parse(sessionStorage.getItem(\"loggedInUser\") || \"null\");\r\n}\r\n\r\nasync function addTransfer(contactId, amount) {\r\n  return await httpService.post(`transfer/`, { contactId, amount });\r\n}\r\n\r\nfunction _saveLocalUser(user) {\r\n  sessionStorage.setItem(\"loggedInUser\", JSON.stringify(user));\r\n  return user;\r\n}\r\n","import { userService } from \"../../services/userService\";\r\n\r\nexport const signup = (userCred) => {\r\n  return async (dispatch) => {\r\n    const user = await userService.signup(userCred);\r\n    dispatch({ type: \"SET_USER\", user });\r\n  };\r\n};\r\nexport const login = (userCred) => {\r\n  return async (dispatch) => {\r\n    const user = await userService.login(userCred);\r\n    dispatch({ type: \"SET_USER\", user });\r\n  };\r\n};\r\n\r\nexport const setLoggedInUser = () => {\r\n  return async (dispatch) => {\r\n    // await userService.getUsers();\r\n    const loggedInUser = await userService.getLoggedInUser();\r\n    dispatch({ type: \"SET_USER\", user: loggedInUser });\r\n  };\r\n};\r\nexport const logout = () => {\r\n  return async (dispatch) => {\r\n    await userService.logout();\r\n    dispatch({ type: \"LOGOUT\" });\r\n  };\r\n};\r\n\r\nexport const transferCoins = (contactId, amount) => {\r\n  return async (dispatch) => {\r\n    const updatedUser = await userService.addTransfer(contactId, amount);\r\n    dispatch({ type: \"SET_USER\", user: updatedUser });\r\n  };\r\n};\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport \"./AppHeader.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/userActions\";\r\n\r\nexport const AppHeader = () => {\r\n  const loggedUser = useSelector((state) => state.userReducer.user);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const onGoHome = () => history.push(\"/\");\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"header-layout app-header\">\r\n      <div onClick={onGoHome} className=\"app-logo\">\r\n        <h1>Mister Bitcoin</h1>\r\n      </div>\r\n      <ul>\r\n        <li>\r\n          <NavLink exact to=\"/\" activeClassName=\"active-nav\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/contact\" activeClassName=\"active-nav\">\r\n            Contacts\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/statistic\" activeClassName=\"active-nav\">\r\n            Statistics\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          {!loggedUser ? (\r\n            <NavLink to=\"/signup\" activeClassName=\"active-nav\">\r\n              SignUp\r\n            </NavLink>\r\n          ) : (\r\n            <NavLink to=\"/\" activeClassName=\"active-nav\" onClick={onLogout}>\r\n              Logout\r\n            </NavLink>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import \"./MovePreview.scss\";\n\nexport const MovePreview = ({ move }) => {\n  return (\n    <li className=\"move-preview\">\n      <p>At: {new Date(move.at).toLocaleDateString()}</p>\n      <p> Amount: {move.amount} </p>\n    </li>\n  );\n};\n","import { MovePreview } from \"../MovePreview/MovePreview\";\nimport \"./MoveList.scss\";\n\nexport const MoveList = ({ moves }) => {\n  return (\n    <section className=\"move-list\">\n      {/* <h3>{title}</h3> */}\n      <ul>\n        {moves.map((move, idx) => (\n          <MovePreview move={move} key={idx} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport \"./TransferFund.scss\";\n\nexport const TransferFund = ({ contact, onTransferCoins, match }) => {\n  const [transferAmount, setTransferAmount] = useState(0);\n  const history = useHistory();\n\n  const transferCoins = (ev) => {\n    onTransferCoins(transferAmount, ev);\n    history.push(\"/contact\");\n  };\n\n  const handleChange = ({ target }) => {\n    const value = target.type === \"number\" ? +target.value : target.value;\n    setTransferAmount(value);\n  };\n\n  return (\n    <section className=\"transfer-fund\">\n      <h3>Transfer coins to {contact.name}:</h3>\n      <form onSubmit={transferCoins}>\n        <label htmlFor=\"amount\">Amount:</label>\n        <input required type=\"number\" id=\"amount\" onChange={handleChange} />\n        <button>Transfer</button>\n      </form>\n    </section>\n  );\n};\n","// import { storageService } from './async-storage.service.js';\r\nimport { httpService } from \"./httpService.js\";\r\n\r\nexport const contactService = {\r\n  getContacts,\r\n  getContactById,\r\n  deleteContact,\r\n  saveContact,\r\n  getEmptyContact,\r\n  addContact,\r\n};\r\n\r\n// const gDefaultContacts = [\r\n//   {\r\n//     _id: '5a56640269f443a5d64b32ca',\r\n//     name: 'Ochoa Hyde',\r\n//     email: 'ochoahyde@renovize.com',\r\n//     phone: '+1 (968) 593-3824',\r\n//   },\r\n//   {\r\n//     _id: '5a5664025f6ae9aa24a99fde',\r\n//     name: 'Hallie Mclean',\r\n//     email: 'halliemclean@renovize.com',\r\n//     phone: '+1 (948) 464-2888',\r\n//   },\r\n//   {\r\n//     _id: '5a56640252d6acddd183d319',\r\n//     name: 'Parsons Norris',\r\n//     email: 'parsonsnorris@renovize.com',\r\n//     phone: '+1 (958) 502-3495',\r\n//   },\r\n//   {\r\n//     _id: '5a566402ed1cf349f0b47b4d',\r\n//     name: 'Rachel Lowe',\r\n//     email: 'rachellowe@renovize.com',\r\n//     phone: '+1 (911) 475-2312',\r\n//   },\r\n//   {\r\n//     _id: '5a566402abce24c6bfe4699d',\r\n//     name: 'Dominique Soto',\r\n//     email: 'dominiquesoto@renovize.com',\r\n//     phone: '+1 (807) 551-3258',\r\n//   },\r\n//   {\r\n//     _id: '5a566402a6499c1d4da9220a',\r\n//     name: 'Shana Pope',\r\n//     email: 'shanapope@renovize.com',\r\n//     phone: '+1 (970) 527-3082',\r\n//   },\r\n//   {\r\n//     _id: '5a566402f90ae30e97f990db',\r\n//     name: 'Faulkner Flores',\r\n//     email: 'faulknerflores@renovize.com',\r\n//     phone: '+1 (952) 501-2678',\r\n//   },\r\n//   {\r\n//     _id: '5a5664027bae84ef280ffbdf',\r\n//     name: 'Holder Bean',\r\n//     email: 'holderbean@renovize.com',\r\n//     phone: '+1 (989) 503-2663',\r\n//   },\r\n//   {\r\n//     _id: '5a566402e3b846c5f6aec652',\r\n//     name: 'Rosanne Shelton',\r\n//     email: 'rosanneshelton@renovize.com',\r\n//     phone: '+1 (968) 454-3851',\r\n//   },\r\n//   {\r\n//     _id: '5a56640272c7dcdf59c3d411',\r\n//     name: 'Pamela Nolan',\r\n//     email: 'pamelanolan@renovize.com',\r\n//     phone: '+1 (986) 545-2166',\r\n//   },\r\n//   {\r\n//     _id: '5a5664029a8dd82a6178b15f',\r\n//     name: 'Roy Cantu',\r\n//     email: 'roycantu@renovize.com',\r\n//     phone: '+1 (929) 571-2295',\r\n//   },\r\n//   {\r\n//     _id: '5a5664028c096d08eeb13a8a',\r\n//     name: 'Ollie Christian',\r\n//     email: 'olliechristian@renovize.com',\r\n//     phone: '+1 (977) 419-3550',\r\n//   },\r\n//   {\r\n//     _id: '5a5664026c53582bb9ebe9d1',\r\n//     name: 'Nguyen Walls',\r\n//     email: 'nguyenwalls@renovize.com',\r\n//     phone: '+1 (963) 471-3181',\r\n//   },\r\n//   {\r\n//     _id: '5a56640298ab77236845b82b',\r\n\r\n//     name: 'Glenna Santana',\r\n//     email: 'glennasantana@renovize.com',\r\n//     phone: '+1 (860) 467-2376',\r\n//   },\r\n//   {\r\n//     _id: '5a56640208fba3e8ecb97305',\r\n//     name: 'Malone Clark',\r\n//     email: 'maloneclark@renovize.com',\r\n//     phone: '+1 (818) 565-2557',\r\n//   },\r\n//   {\r\n//     _id: '5a566402abb3146207bc4ec5',\r\n//     name: 'Floyd Rutledge',\r\n//     email: 'floydrutledge@renovize.com',\r\n//     phone: '+1 (807) 597-3629',\r\n//   },\r\n//   {\r\n//     _id: '5a56640298500fead8cb1ee5',\r\n//     name: 'Grace James',\r\n//     email: 'gracejames@renovize.com',\r\n//     phone: '+1 (959) 525-2529',\r\n//   },\r\n//   {\r\n//     _id: '5a56640243427b8f8445231e',\r\n//     name: 'Tanner Gates',\r\n//     email: 'tannergates@renovize.com',\r\n//     phone: '+1 (978) 591-2291',\r\n//   },\r\n//   {\r\n//     _id: '5a5664025c3abdad6f5e098c',\r\n//     name: 'Lilly Conner',\r\n//     email: 'lillyconner@renovize.com',\r\n//     phone: '+1 (842) 587-3812',\r\n//   },\r\n// ];\r\n\r\nconst STORAGE_KEY = \"contacts\";\r\nconst CONTACT_URL = \"contact/\";\r\n\r\n// _loadContacts();\r\n\r\nfunction sort(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\nasync function getContacts(filterBy = null) {\r\n  var contactsToReturn;\r\n  try {\r\n    // const contacts = await storageService.query(STORAGE_KEY);\r\n    const contacts = await httpService.get(CONTACT_URL);\r\n    if (filterBy) {\r\n      contactsToReturn = filter(filterBy, contacts);\r\n      return sort(contactsToReturn);\r\n    }\r\n    // return sort(contacts);\r\n    return contacts;\r\n  } catch (err) {\r\n    console.log(\"cant get contacts\", err);\r\n  }\r\n}\r\n\r\nasync function getContactById(id) {\r\n  try {\r\n    // const contact = await storageService.get(STORAGE_KEY, id);\r\n    const contact = await httpService.get(CONTACT_URL + id);\r\n    return contact;\r\n  } catch (err) {\r\n    console.log(`Contact id ${id} not found!`, err);\r\n  }\r\n}\r\n\r\nasync function addContact(username) {\r\n  try {\r\n    // const contact = await storageService.get(STORAGE_KEY, id);\r\n    const contact = await httpService.post(CONTACT_URL, { username });\r\n    return contact;\r\n  } catch (err) {\r\n    console.log(`Contact username ${username} not found!`, err);\r\n  }\r\n}\r\n\r\nasync function deleteContact(id) {\r\n  try {\r\n    return await httpService.delete(CONTACT_URL + id, id);\r\n    // await storageService.remove(STORAGE_KEY, id);\r\n    // const contacts = storageService.query(STORAGE_KEY);\r\n    // if (!contacts.length) storageService.store(STORAGE_KEY, gDefaultContacts);\r\n  } catch (err) {\r\n    console.log(`cant delete contact ${id}`, err);\r\n  }\r\n}\r\n\r\nasync function saveContact(contact) {\r\n  var updatedContact;\r\n  try {\r\n    if (contact._id) {\r\n      // updatedContact = await storageService.put(STORAGE_KEY, contact);\r\n      updatedContact = await httpService.put(\r\n        CONTACT_URL + contact._id,\r\n        contact\r\n      );\r\n    } else {\r\n      // updatedContact = await storageService.post(STORAGE_KEY, contact);\r\n      updatedContact = await httpService.post(CONTACT_URL, contact);\r\n    }\r\n    return updatedContact;\r\n  } catch (err) {\r\n    console.log(`cant save contact ${contact}`, err);\r\n  }\r\n}\r\n\r\nfunction getEmptyContact() {\r\n  return {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  };\r\n}\r\n\r\nfunction filter(term, contacts) {\r\n  term = term.toLocaleLowerCase();\r\n  return contacts.filter((contact) => {\r\n    return (\r\n      contact.name.toLocaleLowerCase().includes(term) ||\r\n      contact.phone.toLocaleLowerCase().includes(term) ||\r\n      contact.email.toLocaleLowerCase().includes(term)\r\n    );\r\n  });\r\n}\r\n\r\n// function _loadContacts() {\r\n//   let contacts = JSON.parse(localStorage.getItem(STORAGE_KEY)) || [];\r\n//   if (!contacts || !contacts.length) contacts = gDefaultContacts;\r\n//   localStorage.setItem(STORAGE_KEY, JSON.stringify(contacts));\r\n//   return contacts;\r\n// }\r\n","import { contactService } from \"../../services/contactService\";\r\n\r\nexport const getContacts = (filterBy) => {\r\n  return async (dispatch) => {\r\n    const contacts = await contactService.getContacts(filterBy);\r\n    dispatch({ type: \"SET_CONTACTS\", contacts });\r\n  };\r\n};\r\n\r\nexport const getContactById = (contactId) => {\r\n  return async (dispatch) => {\r\n    const contact = await contactService.getContactById(contactId);\r\n    dispatch({ type: \"SET_CONTACT\", contact });\r\n  };\r\n};\r\nexport const addContact = (username) => {\r\n  return async (dispatch) => {\r\n    const contact = await contactService.addContact(username);\r\n    dispatch({ type: \"SET_CONTACT\", contact });\r\n  };\r\n};\r\n\r\nexport const saveContact = (contact) => {\r\n  return async (dispatch) => {\r\n    const isAdd = !contact._id;\r\n    const updatedContact = await contactService.saveContact(contact);\r\n    if (isAdd) dispatch({ type: \"ADD_CONTACT\", contact: updatedContact });\r\n    else dispatch({ type: \"UPDATE_CONTACT\", contact: updatedContact });\r\n  };\r\n};\r\n\r\nexport const removeContact = (contactId) => {\r\n  return async (dispatch) => {\r\n    await contactService.removeContact(contactId);\r\n    dispatch({ type: \"REMOVE_CONTACT\", contactId });\r\n  };\r\n};\r\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MoveList } from \"../../cmps/MoveList/MoveList\";\nimport { TransferFund } from \"../../cmps/TransferFund/TransferFund\";\nimport { getContactById } from \"../../store/actions/contactActions\";\nimport {\n  setLoggedInUser,\n  transferCoins,\n} from \"../../store/actions/userActions\";\n\nimport \"./ContactDetailsPage.scss\";\n\nexport const ContactDetailsPage = (props) => {\n  const loggedUser = useSelector((state) => state.userReducer.user);\n  const contact = useSelector((state) => state.contactReducer.currContact);\n  const [userToContactMoves, setUserToContactMoves] = useState([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const contactMoves = loggedUser?.moves?.filter((move) => {\n      return move.toId === props.match.params.id;\n    });\n\n    if (loggedUser) {\n      dispatch(getContactById(props.match.params.id));\n    } else {\n      dispatch(setLoggedInUser());\n    }\n    if (contactMoves) setUserToContactMoves(contactMoves);\n  }, [props.match.params.id]);\n\n  const onGoContactPage = () => {\n    props.history.push(\"/contact\");\n  };\n\n  const onEditContact = () => {\n    props.history.push(`/contact/edit/${contact._id}`);\n  };\n\n  const onTransferCoins = (transferAmount, ev) => {\n    ev.preventDefault();\n    if (loggedUser.coins < transferAmount) return alert(\"No enough money\");\n    dispatch(transferCoins(contact._id, transferAmount));\n  };\n\n  if (!contact) return <div>Contact not found...</div>;\n  console.log({ contact });\n  return (\n    <div className=\"contact-details-page\">\n      <h1>Contact Details Page:</h1>\n      <img src={`https://robohash.org/${contact._id}`} alt=\"\" />\n      <p>{contact._id}</p>\n      <p>{contact.name}</p>\n      <p>{contact.email}</p>\n      <p>{contact.phone}</p>\n      <TransferFund contact={contact} onTransferCoins={onTransferCoins} />\n      {userToContactMoves && <MoveList moves={userToContactMoves} />}\n      <button onClick={onGoContactPage}>Back</button>\n      {/* <button onClick={onEditContact}>Edit</button> */}\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveContact } from \"../../store/actions/contactActions\";\n\nimport {contactService} from \"../../services/contactService\";\nimport { setLoggedInUser } from \"../../store/actions/userActions\";\nimport \"./ContactEditPage.scss\";\n\nexport const ContactEditPage = (props) => {\n  const loggedUser = useSelector((state) => state.userReducer.user);\n  const [contact, setContact] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (loggedUser) {\n      const id = props.match.params.id;\n      const loadContact = async (id) => {\n        const contact = id\n          ? await contactService.getContactById(id)\n          : contactService.getEmptyContact();\n        setContact(contact);\n      };\n      loadContact(id);\n    } else {\n      dispatch(setLoggedInUser());\n    }\n  }, []);\n\n  const handleChange = ({ target }) => {\n    const field = target.name;\n    const value = target.type === \"number\" ? +target.value : target.value;\n    setContact({ ...contact, [field]: value });\n  };\n\n  const onRemoveContact = async () => {\n    await contactService.deleteContact(contact._id);\n    props.history.push(\"/contact\");\n  };\n\n  const onSaveContact = (ev) => {\n    ev.preventDefault();\n    dispatch(saveContact(contact));\n    props.history.push(\"/contact\");\n  };\n\n  const onGoBack = () => {\n    props.history.push(`/contact/${contact._id}`);\n  };\n\n  if (!contact) return <h1>Contact not found</h1>;\n  return (\n    <div className=\"contact-edit\">\n      <button onClick={onGoBack}>Back</button>\n      {contact._id && <button onClick={onRemoveContact}>Delete</button>}\n      <form onSubmit={onSaveContact}>\n        <label htmlFor=\"contactName\">Name</label>\n        <input\n          required\n          type=\"text\"\n          id=\"contactName\"\n          value={contact.contactName}\n          onChange={handleChange}\n          name=\"contactName\"\n        />\n\n        <label htmlFor=\"contactEmail\">Email Address</label>\n        <input\n          required\n          type=\"text\"\n          id=\"contactEmail\"\n          value={contact.contactEmail}\n          onChange={handleChange}\n          name=\"contactEmail\"\n        />\n\n        <label htmlFor=\"contactPhone\">Phone Number</label>\n        <input\n          required\n          type=\"text\"\n          id=\"contactPhone\"\n          value={contact.contactPhone}\n          onChange={handleChange}\n          name=\"contactPhone\"\n        />\n\n        <button>Save Robot</button>\n      </form>\n    </div>\n  );\n};\n","import \"./ContactFilter.scss\";\r\n\r\nexport const ContactFilter = (props) => {\r\n  const handleChange = ({ target }) => {\r\n    props.onChangeFilter(target.value);\r\n  };\r\n\r\n  return (\r\n    <form className=\"contact-filter\" onSubmit={(ev) => ev.preventDefault()}>\r\n      <label htmlFor=\"term\">Search contact</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"term\"\r\n        name=\"term\"\r\n        onChange={handleChange}\r\n        placeholder=\"Search...\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\nimport \"./ContactPreview.scss\";\n\nexport const ContactPreview = ({ contact }) => {\n  console.log({ contact });\n  return (\n    <Link to={`/contact/${contact._id}`}>\n      <div className=\"contact-preview\">\n        <img src={`https://robohash.org/${contact._id}`} alt=\"\" />\n        <p>Name: {contact.username}</p>\n        <p>Email: {contact.email}</p>\n        <p>Phone Number: {contact.phone}</p>\n      </div>\n    </Link>\n  );\n};\n","import { ContactPreview } from \"../ContactPreview/ContactPreview\";\nimport \"./ContactList.scss\";\n\nexport const ContactList = ({ contacts }) => {\n  return (\n    <ul className=\"contact-list\">\n      {contacts.map((contact) => (\n        <li key={contact._id}>\n          <ContactPreview contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ContactFilter } from \"../../cmps/ContactFilter/ContactFilter\";\r\nimport { ContactList } from \"../../cmps/ContactList/ContactList\";\r\nimport { getContacts, addContact } from \"../../store/actions/contactActions\";\r\nimport { setLoggedInUser } from \"../../store/actions/userActions\";\r\nimport \"./ContactPage.scss\";\r\n\r\nexport const ContactPage = ({ history }) => {\r\n  const [filterBy, setFilterBy] = useState(null);\r\n  const [contactName, setContactName] = useState(null);\r\n  const loggedUser = useSelector((state) => state.userReducer.user);\r\n  const contacts = useSelector((state) => state.contactReducer.contacts);\r\n  const contact = useSelector((state) => state.contactReducer.currContact);\r\n  const dispatch = useDispatch();\r\n\r\n  const changeFilter = (filterBy) => {\r\n    setFilterBy(filterBy);\r\n  };\r\n  const onAddContact = (ev) => {\r\n    ev.preventDefault();\r\n    dispatch(addContact(contactName));\r\n  };\r\n\r\n  const handleChange = ({ target }) => {\r\n    setContactName(target.value);\r\n  };\r\n\r\n  useEffect(() => {}, [contactName]);\r\n\r\n  useEffect(() => {\r\n    if (loggedUser) {\r\n      dispatch(getContacts(filterBy));\r\n    } else {\r\n      dispatch(setLoggedInUser());\r\n    }\r\n    //  else {\r\n    //   alert(\"Please login\");\r\n    //   history.push(\"/signup\");\r\n    // }\r\n  }, [ contact]);\r\n\r\n  return (\r\n    loggedUser && (\r\n      <div className=\"contact-page\">\r\n        <form onSubmit={onAddContact}>\r\n          <label htmlFor=\"contactName\">Search contact to add</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"contactName\"\r\n            onChange={handleChange}\r\n            name=\"contactName\"\r\n          />\r\n          <button>Add contact</button>\r\n        </form>\r\n\r\n        <ContactFilter onChangeFilter={changeFilter} />\r\n        {contacts ? (\r\n          <ContactList contacts={contacts} />\r\n        ) : (\r\n          <h1>No contacts to show</h1>\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","const axios = require(\"axios\");\r\n\r\nexport const bitcoinService = {\r\n  getRate,\r\n  getMarketPrice,\r\n  getConfirmedTransactions,\r\n};\r\n\r\n//return usd rate\r\nasync function getRate() {\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://blockchain.info/tobtc?currency=USD&value=1\"\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"bitcoin service: get rate: cant fetch rate data\", error);\r\n  }\r\n}\r\n\r\nasync function getMarketPrice() {\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true\"\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"bitcoin service: get rate: cant fetch rate data\", error);\r\n  }\r\n}\r\n\r\nasync function getConfirmedTransactions() {\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://blockchain.info/tobtc?currency=USD&value=1\"\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"bitcoin service: get rate: cant fetch rate data\", error);\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/home.928af089.jpg\";","import { useEffect, useState } from \"react\";\nimport { bitcoinService } from \"../../services/bitcoinService.js\";\nimport { MoveList } from \"../../cmps/MoveList/MoveList.jsx\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoggedInUser } from \"../../store/actions/userActions.js\";\nimport HomePageImg from \"../../assets/imgs/home.jpg\";\nimport \"./HomePage.scss\";\n\nexport const HomePage = () => {\n  const [bitcoinRate, setBitcoinRate] = useState(0);\n  const loggedUser = useSelector((state) => state.userReducer.user);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const loadBitcoinRate = async () => {\n      const fetchRate = await bitcoinService.getRate();\n      setBitcoinRate(fetchRate);\n    };\n    loadBitcoinRate();\n\n    if (!loggedUser) {\n      dispatch(setLoggedInUser());\n    }\n  }, []);\n\n  if (!loggedUser)\n    return (\n      <div>\n        <img src={HomePageImg} alt=\"\" />\n      </div>\n    );\n  return (\n    <div className=\"home-page\">\n      <h1>Hello {loggedUser.fullname}</h1>\n      <h3>You have {loggedUser.coins} coins</h3>\n      <h3>Bitcoin rate {bitcoinRate} per 1$</h3>\n      {loggedUser.moves && <MoveList moves={loggedUser.moves} />}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { signup, login } from \"../../store/actions/userActions\";\nimport \"./SignupPage.scss\";\n\nexport const SignupPage = (props) => {\n  const [userCred, setUserCred] = useState(null);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const field = target.name;\n    const value = target.value === \"number\" ? +target.value : target.value;\n    setUserCred({ ...userCred, [field]: value });\n  };\n\n  const onSignUp = (ev) => {\n    ev.preventDefault();\n    dispatch(signup(userCred));\n    props.history.push(\"/\");\n  };\n\n  const onLogin = (ev) => {\n    ev.preventDefault();\n    dispatch(login(userCred));\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"signup-page\">\n      <h1>Signup</h1>\n      <form onSubmit={onSignUp}>\n        <label htmlFor=\"fullname\">Full name</label>\n        <input\n          required\n          type=\"text\"\n          id=\"fullname\"\n          onChange={handleChange}\n          name=\"fullname\"\n        />\n\n        <label htmlFor=\"username\">User name</label>\n        <input\n          required\n          type=\"text\"\n          id=\"username\"\n          onChange={handleChange}\n          name=\"username\"\n        />\n\n        <label htmlFor=\"password\">Password</label>\n        <input\n          required\n          type=\"password\"\n          id=\"password\"\n          onChange={handleChange}\n          name=\"password\"\n        />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          required\n          type=\"text\"\n          id=\"email\"\n          onChange={handleChange}\n          name=\"email\"\n        />\n        <label htmlFor=\"phone\">Phone number</label>\n        <input\n          required\n          type=\"text\"\n          id=\"phone\"\n          onChange={handleChange}\n          name=\"phone\"\n        />\n        <button>Sign up</button>\n        <hr />\n      </form>\n\n      <h1>Login</h1>\n      <form onSubmit={onLogin}>\n        <label htmlFor=\"username\">User name</label>\n        <input\n          required\n          type=\"text\"\n          id=\"username\"\n          onChange={handleChange}\n          name=\"username\"\n        />\n\n        <label htmlFor=\"password\">Password</label>\n        <input\n          required\n          type=\"password\"\n          id=\"password\"\n          onChange={handleChange}\n          name=\"password\"\n        />\n        <button>Login</button>\n      </form>\n    </div>\n  );\n};\n","import { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport \"./Chart.scss\";\n\nexport const Chart = ({ title, data, description }) => {\n  return (\n    <div>\n      <h1>{(title, description)}</h1>\n      <Sparklines data={data}>\n        <SparklinesLine color=\"red\" />\n      </Sparklines>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Chart } from \"../../cmps/Chart/Chart\";\nimport { bitcoinService } from \"../../services/bitcoinService\";\nimport \"./StatisticPage.scss\";\n\nexport const StatisticPage = () => {\n  const [marketPrice, setMarketPrice] = useState(null);\n  const [marketPriceValues, getMarketPriceValues] = useState(null);\n\n  useEffect(() => {\n    const loadMarketPrice = async () => {\n      try {\n        const marketPrice = await bitcoinService.getMarketPrice();\n        setMarketPrice(marketPrice);\n        const values = marketPrice.values.map((value) => value.y);\n        getMarketPriceValues(values);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    loadMarketPrice();\n  }, []);\n\n  return (\n    marketPrice &&\n    marketPriceValues && (\n      <div>\n        <h1>Statistic page:</h1>\n        <Chart\n          title={marketPrice.name}\n          description={marketPrice.description}\n          data={marketPriceValues}\n          color={\"red\"}\n        />\n      </div>\n    )\n  );\n};\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { AppHeader } from \"./cmps/AppHeader/AppHeader\";\nimport { ContactDetailsPage } from \"./pages/ContactDetailsPage/ContactDetailsPage\";\nimport { ContactEditPage } from \"./pages/ContactEditPage/ContactEditPage\";\nimport { ContactPage } from \"./pages/ContactPage/ContactPage\";\nimport { HomePage } from \"./pages/HomePage/HomePage\";\nimport { SignupPage } from \"./pages/SignupPage/SignupPage\";\nimport { StatisticPage } from \"./pages/StatisticPage/StatisticPage\";\nimport \"./App.css\";\n\nexport const App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppHeader />\n        <Switch>\n          <Route component={ContactEditPage} path=\"/contact/edit/:id?\" />\n          <Route component={ContactDetailsPage} path=\"/contact/:id\" />\n          <Route component={ContactPage} path=\"/contact\" />\n          <Route component={StatisticPage} path=\"/statistic\" />\n          <Route component={SignupPage} path=\"/signup\" />\n          <Route component={HomePage} path=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\r\n  contacts: [],\r\n  currContact: null,\r\n};\r\n\r\nexport const contactReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CONTACTS\":\r\n      return {\r\n        ...state,\r\n        contacts: action.contacts,\r\n      };\r\n    case \"SET_CONTACT\": {\r\n      return {\r\n        ...state,\r\n        currContact: action.contact,\r\n      };\r\n    }\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.contact],\r\n      };\r\n    case \"REMOVE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact._id !== action.contactId\r\n        ),\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      const { ...updatedContact } = action;\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact._id === updatedContact._id ? updatedContact : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const INITIAL_STATE = {\r\n  user: null,\r\n};\r\n\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { contactReducer } from \"./reducers/contactReducer\";\r\nimport { userReducer } from \"./reducers/userReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n  contactReducer,\r\n  userReducer,\r\n});\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./store\";\nimport \"./assets/scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}