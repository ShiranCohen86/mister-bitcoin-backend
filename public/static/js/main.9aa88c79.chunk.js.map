{"version":3,"sources":["services/httpService.js","services/userService.js","store/actions/userActions.js","cmps/AppHeader/AppHeader.jsx","cmps/MovePreview/MovePreview.jsx","cmps/MoveList/MoveList.jsx","cmps/TransferFund/TransferFund.jsx","services/contactService.js","services/utilService.js","store/actions/contactActions.js","pages/ContactDetailsPage/ContactDetailsPage.jsx","pages/ContactEditPage/ContactEditPage.jsx","cmps/ContactFilter/ContactFilter.jsx","cmps/ContactPreview/ContactPreview.jsx","cmps/ContactList/ContactList.jsx","pages/ContactPage/ContactPage.jsx","services/bitcoinService.js","assets/imgs/home.jpg","pages/HomePage/HomePage.jsx","pages/SignupPage/SignupPage.jsx","cmps/Chart/Chart.jsx","pages/StatisticPage/StatisticPage.jsx","App.js","reportWebVitals.js","store/reducers/contactReducer.js","store/reducers/userReducer.js","store/index.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","userService","getUsers","getById","userId","remove","update","login","signup","logout","getLoggedInUser","user","_id","_saveLocalUser","userCred","sessionStorage","clear","JSON","parse","getItem","setItem","stringify","window","setLoggedInUser","dispatch","loggedInUser","type","AppHeader","loggedUser","useSelector","state","userReducer","history","useHistory","useDispatch","className","onClick","push","exact","to","activeClassName","MovePreview","move","Date","at","toLocaleDateString","amount","MoveList","moves","map","idx","TransferFund","contact","onTransferCoins","match","useState","transferAmount","setTransferAmount","name","onSubmit","ev","htmlFor","required","id","onChange","target","value","getContacts","getContactById","deleteContact","Promise","resolve","reject","index","contacts","findIndex","splice","saveContact","c","_updateContact","length","txt","possible","i","charAt","Math","floor","random","makeId","_addContact","getEmptyContact","contactName","contactEmail","contactPhone","loggedUserId","find","ContactDetailsPage","props","contactReducer","currContact","userToContactMoves","setUserToContactMoves","useEffect","contactId","contactMoves","filter","toId","contactService","src","alt","preventDefault","coins","alert","addMove","updatedUser","transferCoins","ContactEditPage","setContact","loadContact","handleChange","field","onRemoveContact","isAdd","updatedContact","ContactFilter","onChangeFilter","placeholder","ContactPreview","ContactList","ContactPage","filterBy","setFilterBy","loadContacts","require","bitcoinService","getRate","getMarketPrice","getConfirmedTransactions","get","error","HomePage","bitcoinRate","setBitcoinRate","loadBitcoinRate","fetchRate","fullname","HomePageImg","SignupPage","setUserCred","Chart","title","description","color","StatisticPage","marketPrice","setMarketPrice","marketPriceValues","getMarketPriceValues","loadMarketPrice","values","y","App","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9aa88c79.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            // window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n        }\r\n        throw err\r\n    }\r\n}","// import { storageService } from \"./async-storage.service\";\r\nimport { httpService } from \"./httpService\";\r\n\r\nexport const userService = {\r\n  getUsers,\r\n  getById,\r\n  remove,\r\n  update,\r\n  login,\r\n  signup,\r\n  logout,\r\n  getLoggedInUser,\r\n  // addMove,\r\n};\r\n\r\nwindow.userService = userService\r\n\r\nfunction getUsers() {\r\n  // return storageService.query(\"user\");\r\n  return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n  // return storageService.get(\"user\", userId);\r\n  return httpService.get(`user/${userId}`)\r\n}\r\n\r\nfunction remove(userId) {\r\n  // return storageService.remove(\"user\", userId);\r\n  return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n  // return storageService.put(\"user\", user);\r\n  user = await httpService.put(`user/${user._id}`, user)\r\n  // Handle case in which admin updates other user's details\r\n  if (getLoggedInUser()._id === user._id) _saveLocalUser(user);\r\n}\r\n\r\nasync function login(userCred) {\r\n  // const users = await storageService.query(\"user\");\r\n  // const user = users.find((user) => user.username === userCred.username);\r\n  // return _saveLocalUser(user);\r\n\r\n  const user = await httpService.post('auth/login', userCred)\r\n  if (user) return _saveLocalUser(user)\r\n}\r\n\r\nasync function signup(userCred) {\r\n  // const user = await storageService.post(\"user\", userCred);\r\n  const user = await httpService.post('auth/signup', userCred)\r\n  return _saveLocalUser(user);\r\n}\r\n\r\nasync function logout() {\r\n  sessionStorage.clear();\r\n  return await httpService.post('auth/logout')\r\n}\r\n\r\nfunction getLoggedInUser() {\r\n  return JSON.parse(sessionStorage.getItem(\"loggedInUser\") || \"null\");\r\n}\r\n\r\n// function addMove(contact, amount) {\r\n//   const move = {\r\n//     id: makeId(),\r\n//     toId: contact._id,\r\n//     to: contact.contactName,\r\n//     at: Date.now(),\r\n//     amount,\r\n//   };\r\n//   loggedUser.moves.push(move);\r\n//   loggedUser.coins = loggedUser.coins - amount;\r\n//   storageService.store(STORAGE_KEY, loggedUser);\r\n\r\n//   return loggedUser;\r\n// }\r\n\r\nfunction _saveLocalUser(user) {\r\n  sessionStorage.setItem(\"loggedInUser\", JSON.stringify(user));\r\n  return user;\r\n}\r\n","import { userService } from \"../../services/userService\";\r\n\r\nexport const signup = (userCred) => {\r\n  return async (dispatch) => {\r\n    const user = await userService.signup(userCred);\r\n    dispatch({ type: \"SET_USER\", user });\r\n  };\r\n};\r\n\r\nexport const setLoggedInUser = () => {\r\n  return async (dispatch) => {\r\n    // await userService.getUsers();\r\n    const loggedInUser = await userService.getLoggedInUser();\r\n    dispatch({ type: \"SET_USER\", user: loggedInUser });\r\n  };\r\n};\r\nexport const logout = () => {\r\n  return async (dispatch) => {\r\n    await userService.logout();\r\n    dispatch({ type: \"LOGOUT\" });\r\n  };\r\n};\r\n\r\nexport const transferCoins = (contact, amount) => {\r\n  return async (dispatch) => {\r\n    const updatedUser = await userService.addMove(contact, amount);\r\n    dispatch({ type: \"SET_USER\", updatedUser });\r\n  };\r\n};\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport \"./AppHeader.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/userActions\";\r\n\r\nexport const AppHeader = () => {\r\n  const loggedUser = useSelector((state) => state.userReducer.user);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const onGoHome = () => history.push(\"/\");\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"header-layout app-header\">\r\n      <div onClick={onGoHome} className=\"app-logo\">\r\n        <h1>Mister Bitcoin</h1>\r\n      </div>\r\n      <ul>\r\n        <li>\r\n          <NavLink exact to=\"/\" activeClassName=\"active-nav\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/contact\" activeClassName=\"active-nav\">\r\n            Contacts\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/statistic\" activeClassName=\"active-nav\">\r\n            Statistics\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          {!loggedUser ? (\r\n            <NavLink to=\"/signup\" activeClassName=\"active-nav\">\r\n              SignUp\r\n            </NavLink>\r\n          ) : (\r\n            <NavLink to=\"/\" activeClassName=\"active-nav\" onClick={onLogout}>\r\n              Logout\r\n            </NavLink>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import \"./MovePreview.scss\";\n\nexport const MovePreview = ({ move }) => {\n  return (\n    <li className=\"move-preview\">\n      <p>At: {new Date(move.at).toLocaleDateString()}</p>\n      <p> Amount: {move.amount} </p>\n    </li>\n  );\n};\n","import { MovePreview } from \"../MovePreview/MovePreview\";\nimport \"./MoveList.scss\";\n\nexport const MoveList = ({ moves }) => {\n  return (\n    <section className=\"move-list\">\n      {/* <h3>{title}</h3> */}\n      <ul>\n        {moves.map((move, idx) => (\n          <MovePreview move={move} key={idx} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport \"./TransferFund.scss\";\n\nexport const TransferFund = ({ contact, onTransferCoins, match }) => {\n  const [transferAmount, setTransferAmount] = useState(0);\n  const history = useHistory();\n\n  const transferCoins = (ev) => {\n    onTransferCoins(transferAmount, ev);\n    history.push(\"/contact\");\n  };\n\n  const handleChange = ({ target }) => {\n    const value = target.type === \"number\" ? +target.value : target.value;\n    setTransferAmount(value);\n  };\n\n  return (\n    <section className=\"transfer-fund\">\n      <h3>Transfer coins to {contact.name}:</h3>\n      <form onSubmit={transferCoins}>\n        <label htmlFor=\"amount\">Amount:</label>\n        <input required type=\"number\" id=\"amount\" onChange={handleChange} />\n        <button>Transfer</button>\n      </form>\n    </section>\n  );\n};\n","import { makeId } from \"../services/utilService\";\r\nimport { httpService } from \"./httpService\";\r\n\r\nexport default {\r\n  getContacts,\r\n  getContactById,\r\n  deleteContact,\r\n  saveContact,\r\n  getEmptyContact,\r\n};\r\n\r\nconst contacts = [\r\n  {\r\n    _id: \"5a56640269f443a5d64b32ca\",\r\n    contactName: \"Ochoa Hyde\",\r\n    contactEmail: \"ochoahyde@renovize.com\",\r\n    contactPhone: \"+1 (968) 593-3824\",\r\n  },\r\n  {\r\n    _id: \"5a5664025f6ae9aa24a99fde\",\r\n    contactName: \"Hallie Mclean\",\r\n    contactEmail: \"halliemclean@renovize.com\",\r\n    contactPhone: \"+1 (948) 464-2888\",\r\n  },\r\n  {\r\n    _id: \"5a56640252d6acddd183d319\",\r\n    contactName: \"Parsons Norris\",\r\n    contactEmail: \"parsonsnorris@renovize.com\",\r\n    contactPhone: \"+1 (958) 502-3495\",\r\n  },\r\n  {\r\n    _id: \"5a566402ed1cf349f0b47b4d\",\r\n    contactName: \"Rachel Lowe\",\r\n    contactEmail: \"rachellowe@renovize.com\",\r\n    contactPhone: \"+1 (911) 475-2312\",\r\n  },\r\n  {\r\n    _id: \"5a566402abce24c6bfe4699d\",\r\n    contactName: \"Dominique Soto\",\r\n    contactEmail: \"dominiquesoto@renovize.com\",\r\n    contactPhone: \"+1 (807) 551-3258\",\r\n  },\r\n  {\r\n    _id: \"5a566402a6499c1d4da9220a\",\r\n    contactName: \"Shana Pope\",\r\n    contactEmail: \"shanapope@renovize.com\",\r\n    contactPhone: \"+1 (970) 527-3082\",\r\n  },\r\n  {\r\n    _id: \"5a566402f90ae30e97f990db\",\r\n    contactName: \"Faulkner Flores\",\r\n    contactEmail: \"faulknerflores@renovize.com\",\r\n    contactPhone: \"+1 (952) 501-2678\",\r\n  },\r\n  {\r\n    _id: \"5a5664027bae84ef280ffbdf\",\r\n    contactName: \"Holder Bean\",\r\n    contactEmail: \"holderbean@renovize.com\",\r\n    contactPhone: \"+1 (989) 503-2663\",\r\n  },\r\n  {\r\n    _id: \"5a566402e3b846c5f6aec652\",\r\n    contactName: \"Rosanne Shelton\",\r\n    contactEmail: \"rosanneshelton@renovize.com\",\r\n    contactPhone: \"+1 (968) 454-3851\",\r\n  },\r\n  {\r\n    _id: \"5a56640272c7dcdf59c3d411\",\r\n    contactName: \"Pamela Nolan\",\r\n    contactEmail: \"pamelanolan@renovize.com\",\r\n    contactPhone: \"+1 (986) 545-2166\",\r\n  },\r\n  {\r\n    _id: \"5a5664029a8dd82a6178b15f\",\r\n    contactName: \"Roy Cantu\",\r\n    contactEmail: \"roycantu@renovize.com\",\r\n    contactPhone: \"+1 (929) 571-2295\",\r\n  },\r\n  {\r\n    _id: \"5a5664028c096d08eeb13a8a\",\r\n    contactName: \"Ollie Christian\",\r\n    contactEmail: \"olliechristian@renovize.com\",\r\n    contactPhone: \"+1 (977) 419-3550\",\r\n  },\r\n  {\r\n    _id: \"5a5664026c53582bb9ebe9d1\",\r\n    contactName: \"Nguyen Walls\",\r\n    contactEmail: \"nguyenwalls@renovize.com\",\r\n    contactPhone: \"+1 (963) 471-3181\",\r\n  },\r\n  {\r\n    _id: \"5a56640298ab77236845b82b\",\r\n\r\n    contactName: \"Glenna Santana\",\r\n    contactEmail: \"glennasantana@renovize.com\",\r\n    contactPhone: \"+1 (860) 467-2376\",\r\n  },\r\n  {\r\n    _id: \"5a56640208fba3e8ecb97305\",\r\n    contactName: \"Malone Clark\",\r\n    contactEmail: \"maloneclark@renovize.com\",\r\n    contactPhone: \"+1 (818) 565-2557\",\r\n  },\r\n  {\r\n    _id: \"5a566402abb3146207bc4ec5\",\r\n    contactName: \"Floyd Rutledge\",\r\n    contactEmail: \"floydrutledge@renovize.com\",\r\n    contactPhone: \"+1 (807) 597-3629\",\r\n  },\r\n  {\r\n    _id: \"5a56640298500fead8cb1ee5\",\r\n    contactName: \"Grace James\",\r\n    contactEmail: \"gracejames@renovize.com\",\r\n    contactPhone: \"+1 (959) 525-2529\",\r\n  },\r\n  {\r\n    _id: \"5a56640243427b8f8445231e\",\r\n    contactName: \"Tanner Gates\",\r\n    contactEmail: \"tannergates@renovize.com\",\r\n    contactPhone: \"+1 (978) 591-2291\",\r\n  },\r\n  {\r\n    _id: \"5a5664025c3abdad6f5e098c\",\r\n    contactName: \"Lilly Conner\",\r\n    contactEmail: \"lillyconner@renovize.com\",\r\n    contactPhone: \"+1 (842) 587-3812\",\r\n  },\r\n];\r\n\r\nfunction sort(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.contactName.toLocaleLowerCase() < b.contactName.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.contactName.toLocaleLowerCase() > b.contactName.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  });\r\n}\r\n\r\nasync function getContacts(filterBy = null, loggedUserId) {\r\n  return await httpService.post(`contact/`, {loggedUserId});\r\n\r\n  // return sort(user.contacts);\r\n}\r\n\r\nasync function getContactById(id, loggedUserId) {\r\n  const user = await httpService.get(`user/${loggedUserId}`);\r\n  const contact = user.contacts.find((contact) => contact._id === id);\r\n  return contact;\r\n}\r\n\r\nfunction deleteContact(id) {\r\n  return new Promise((resolve, reject) => {\r\n    const index = contacts.findIndex((contact) => contact._id === id);\r\n    if (index !== -1) {\r\n      contacts.splice(index, 1);\r\n    }\r\n\r\n    resolve(contacts);\r\n  });\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n  return new Promise((resolve, reject) => {\r\n    const index = contacts.findIndex((c) => contact._id === c._id);\r\n    if (index !== -1) {\r\n      contacts[index] = contact;\r\n    }\r\n    resolve(contact);\r\n  });\r\n}\r\n\r\nfunction _addContact(contact) {\r\n  return new Promise((resolve, reject) => {\r\n    contact._id = makeId();\r\n    contacts.push(contact);\r\n    resolve(contact);\r\n  });\r\n}\r\n\r\nfunction saveContact(contact) {\r\n  return contact._id ? _updateContact(contact) : _addContact(contact);\r\n}\r\n\r\nfunction getEmptyContact() {\r\n  return {\r\n    contactName: \"\",\r\n    contactEmail: \"\",\r\n    contactPhone: \"\",\r\n  };\r\n}\r\n\r\nfunction filter(term) {\r\n  term = term.toLocaleLowerCase();\r\n  return contacts.filter((contact) => {\r\n    return (\r\n      contact.contactName.toLocaleLowerCase().includes(term) ||\r\n      contact.contactPhone.toLocaleLowerCase().includes(term) ||\r\n      contact.contactEmail.toLocaleLowerCase().includes(term)\r\n    );\r\n  });\r\n}\r\n","export function makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n      txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n  }","import contactService from \"../../services/contactService\";\r\n\r\nexport const loadContacts = (filterBy, loggedUserId) => {\r\n  return async (dispatch) => {\r\n    const contacts = await contactService.getContacts(filterBy, loggedUserId);\r\n    dispatch({ type: \"SET_CONTACTS\", contacts });\r\n  };\r\n};\r\n\r\nexport const getContactById = (contactId, loggedUserId) => {\r\n  return async (dispatch) => {\r\n    const contact = await contactService.getContactById(\r\n      contactId,\r\n      loggedUserId\r\n    );\r\n    dispatch({ type: \"SET_CONTACT\", contact });\r\n  };\r\n};\r\n\r\nexport const saveContact = (contact) => {\r\n  return async (dispatch) => {\r\n    const isAdd = !contact._id;\r\n    const updatedContact = await contactService.saveContact(contact);\r\n    if (isAdd) dispatch({ type: \"ADD_CONTACT\", contact: updatedContact });\r\n    else dispatch({ type: \"UPDATE_CONTACT\", contact: updatedContact });\r\n  };\r\n};\r\n\r\nexport const removeContact = (contactId) => {\r\n  return async (dispatch) => {\r\n    await contactService.removeContact(contactId);\r\n    dispatch({ type: \"REMOVE_CONTACT\", contactId });\r\n  };\r\n};\r\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MoveList } from \"../../cmps/MoveList/MoveList\";\nimport { TransferFund } from \"../../cmps/TransferFund/TransferFund\";\nimport { getContactById } from \"../../store/actions/contactActions\";\nimport {\n  setLoggedInUser,\n  transferCoins,\n} from \"../../store/actions/userActions\";\n\nimport \"./ContactDetailsPage.scss\";\n\nexport const ContactDetailsPage = (props) => {\n  const loggedUser = useSelector((state) => state.userReducer.user);\n  const contact = useSelector((state) => state.contactReducer.currContact);\n  const [userToContactMoves, setUserToContactMoves] = useState([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const contactMoves = loggedUser?.moves?.filter((move) => {\n      return move.toId === props.match.params.id;\n    });\n\n    dispatch(setLoggedInUser());\n    if (loggedUser) dispatch(getContactById(props.match.params.id, loggedUser._id));\n    if (contactMoves) setUserToContactMoves(contactMoves);\n  }, [props.match.params.id]);\n\n  const onGoContactPage = () => {\n    props.history.push(\"/contact\");\n  };\n\n  const onEditContact = () => {\n    props.history.push(`/contact/edit/${contact._id}`);\n  };\n\n  const onTransferCoins = (transferAmount, ev) => {\n    ev.preventDefault();\n    if (loggedUser.coins < transferAmount) return alert(\"No enough money\");\n    dispatch(transferCoins(contact, transferAmount));\n  };\n\n  if (!contact) return <div>Contact not found...</div>;\n\n  return (\n    <div className=\"contact-details-page\">\n      <h1>Contact Details Page:</h1>\n      <img src={`https://robohash.org/${contact._id}`} alt=\"\" />\n      <p>{contact._id}</p>\n      <p>{contact.contactName}</p>\n      <p>{contact.contactEmail}</p>\n      <p>{contact.contactPhone}</p>\n      <TransferFund contact={contact} onTransferCoins={onTransferCoins} />\n      {userToContactMoves && <MoveList moves={userToContactMoves} />}\n      <button onClick={onGoContactPage}>Back</button>\n      <button onClick={onEditContact}>Edit</button>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveContact } from \"../../store/actions/contactActions\";\n\nimport contactService from \"../../services/contactService\";\nimport { setLoggedInUser } from \"../../store/actions/userActions\";\nimport \"./ContactEditPage.scss\";\n\nexport const ContactEditPage = (props) => {\n  const loggedUser = useSelector((state) => state.userReducer.user);\n  const [contact, setContact] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (loggedUser) {\n      const id = props.match.params.id;\n      const loadContact = async (id) => {\n        const contact = id\n          ? await contactService.getContactById(id, loggedUser._id)\n          : contactService.getEmptyContact();\n        setContact(contact);\n      };\n      loadContact(id);\n    } else {\n      dispatch(setLoggedInUser());\n    }\n  }, []);\n\n  const handleChange = ({ target }) => {\n    const field = target.name;\n    const value = target.type === \"number\" ? +target.value : target.value;\n    setContact({ ...contact, [field]: value });\n  };\n\n  const onRemoveContact = async () => {\n    await contactService.deleteContact(contact._id);\n    props.history.push(\"/contact\");\n  };\n\n  const onSaveContact = (ev) => {\n    ev.preventDefault();\n    dispatch(saveContact(contact));\n    props.history.push(\"/contact\");\n  };\n\n  const onGoBack = () => {\n    props.history.push(`/contact/${contact._id}`);\n  };\n\n  if (!contact) return <h1>Contact not found</h1>;\n  return (\n    <div className=\"contact-edit\">\n      <button onClick={onGoBack}>Back</button>\n      {contact._id && <button onClick={onRemoveContact}>Delete</button>}\n      <form onSubmit={onSaveContact}>\n        <label htmlFor=\"contactName\">Name</label>\n        <input\n          required\n          type=\"text\"\n          id=\"contactName\"\n          value={contact.contactName}\n          onChange={handleChange}\n          name=\"contactName\"\n        />\n\n        <label htmlFor=\"contactEmail\">Email Address</label>\n        <input\n          required\n          type=\"text\"\n          id=\"contactEmail\"\n          value={contact.contactEmail}\n          onChange={handleChange}\n          name=\"contactEmail\"\n        />\n\n        <label htmlFor=\"contactPhone\">Phone Number</label>\n        <input\n          required\n          type=\"text\"\n          id=\"contactPhone\"\n          value={contact.contactPhone}\n          onChange={handleChange}\n          name=\"contactPhone\"\n        />\n\n        <button>Save Robot</button>\n      </form>\n    </div>\n  );\n};\n","import \"./ContactFilter.scss\";\r\n\r\nexport const ContactFilter = (props) => {\r\n  const handleChange = ({ target }) => {\r\n    props.onChangeFilter(target.value);\r\n  };\r\n\r\n  return (\r\n    <form className=\"contact-filter\" onSubmit={(ev) => ev.preventDefault()}>\r\n      <label htmlFor=\"term\">Search contact</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"term\"\r\n        name=\"term\"\r\n        onChange={handleChange}\r\n        placeholder=\"Search...\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\nimport \"./ContactPreview.scss\";\n\nexport const ContactPreview = ({ contact }) => {\n  return (\n    <Link to={`/contact/${contact._id}`}>\n      <div className=\"contact-preview\">\n        <img src={`https://robohash.org/${contact._id}`} alt=\"\" />\n        <p>Name: {contact.contactName}</p>\n        <p>Email: {contact.contactEmail}</p>\n        <p>Phone Number: {contact.contactPhone}</p>\n      </div>\n    </Link>\n  );\n};\n","import { ContactPreview } from \"../ContactPreview/ContactPreview\";\nimport \"./ContactList.scss\";\n\nexport const ContactList = ({ contacts }) => {\n  return (\n    <ul className=\"contact-list\">\n      {contacts.map((contact) => (\n        <li key={contact._id}>\n          <ContactPreview contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ContactFilter } from \"../../cmps/ContactFilter/ContactFilter\";\r\nimport { ContactList } from \"../../cmps/ContactList/ContactList\";\r\nimport { loadContacts } from \"../../store/actions/contactActions\";\r\nimport { setLoggedInUser } from \"../../store/actions/userActions\";\r\nimport \"./ContactPage.scss\";\r\n\r\nexport const ContactPage = ({ history }) => {\r\n  const [filterBy, setFilterBy] = useState(null);\r\n  const loggedUser = useSelector((state) => state.userReducer.user);\r\n  const contacts = useSelector((state) => state.contactReducer.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const changeFilter = (filterBy) => {\r\n    setFilterBy(filterBy);\r\n  };\r\n  const onAddContact = () => {\r\n    history.push(\"/contact/edit\");\r\n  };\r\n  useEffect(() => {\r\n    if (loggedUser) {\r\n      dispatch(setLoggedInUser());\r\n      dispatch(loadContacts(filterBy, loggedUser._id));\r\n    }\r\n\r\n    //  else {\r\n    //   alert(\"Please login\");\r\n    //   history.push(\"/signup\");\r\n    // }\r\n  }, [filterBy]);\r\n\r\n  return (\r\n    loggedUser && (\r\n      <div className=\"contact-page\">\r\n        <button onClick={onAddContact}>Add Contact</button>\r\n        <ContactFilter onChangeFilter={changeFilter} />\r\n        {contacts.length ? (\r\n          <ContactList contacts={contacts} />\r\n        ) : (\r\n          <h1>No contacts to show</h1>\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","const axios = require(\"axios\");\r\n\r\nexport const bitcoinService = {\r\n  getRate,\r\n  getMarketPrice,\r\n  getConfirmedTransactions,\r\n};\r\n\r\n//return usd rate\r\nasync function getRate() {\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://blockchain.info/tobtc?currency=USD&value=1\"\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"bitcoin service: get rate: cant fetch rate data\", error);\r\n  }\r\n}\r\n\r\nasync function getMarketPrice() {\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true\"\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"bitcoin service: get rate: cant fetch rate data\", error);\r\n  }\r\n}\r\n\r\nasync function getConfirmedTransactions() {\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://blockchain.info/tobtc?currency=USD&value=1\"\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"bitcoin service: get rate: cant fetch rate data\", error);\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/home.928af089.jpg\";","import { useEffect, useState } from \"react\";\nimport { bitcoinService } from \"../../services/bitcoinService.js\";\nimport { MoveList } from \"../../cmps/MoveList/MoveList.jsx\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoggedInUser } from \"../../store/actions/userActions.js\";\nimport HomePageImg from \"../../assets/imgs/home.jpg\";\nimport \"./HomePage.scss\";\n\nexport const HomePage = () => {\n  const [bitcoinRate, setBitcoinRate] = useState(0);\n  const loggedUser = useSelector((state) => state.userReducer.user);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const loadBitcoinRate = async () => {\n      const fetchRate = await bitcoinService.getRate();\n      setBitcoinRate(fetchRate);\n    };\n    loadBitcoinRate();\n\n    if (!loggedUser) dispatch(setLoggedInUser());\n  }, []);\n\n  if (!loggedUser)\n    return (\n      <div>\n        <img src={HomePageImg} alt=\"\" />\n      </div>\n    );\n  return (\n    <div className=\"home-page\">\n      <h1>Hello {loggedUser.fullname}</h1>\n      <h3>You have {loggedUser.coins} coins</h3>\n      <h3>Bitcoin rate {bitcoinRate} per 1$</h3>\n      {loggedUser.moves && <MoveList moves={loggedUser.moves} />}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { signup } from \"../../store/actions/userActions\";\nimport \"./SignupPage.scss\";\n\nexport const SignupPage = (props) => {\n  const [userCred, setUserCred] = useState(null);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const field = target.name;\n    const value = target.value === \"number\" ? +target.value : target.value;\n    setUserCred({ ...userCred, [field]: value });\n  };\n\n  const onSignUp = (ev) => {\n    ev.preventDefault();\n    dispatch(signup(userCred));\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"signup-page\">\n      <h1>Please enter your name</h1>\n      <form onSubmit={onSignUp}>\n        <label htmlFor=\"fullname\">Full name</label>\n        <input\n          required\n          type=\"text\"\n          id=\"fullname\"\n          onChange={handleChange}\n          name=\"fullname\"\n        />\n\n        <label htmlFor=\"username\">User name</label>\n        <input\n          required\n          type=\"text\"\n          id=\"username\"\n          onChange={handleChange}\n          name=\"username\"\n        />\n\n        <label htmlFor=\"password\">Password</label>\n        <input\n          required\n          type=\"password\"\n          id=\"password\"\n          onChange={handleChange}\n          name=\"password\"\n        />\n        <button>sign up</button>\n      </form>\n    </div>\n  );\n};\n","import { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport \"./Chart.scss\";\n\nexport const Chart = ({ title, data, description }) => {\n  return (\n    <div>\n      <h1>{(title, description)}</h1>\n      <Sparklines data={data}>\n        <SparklinesLine color=\"red\" />\n      </Sparklines>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Chart } from \"../../cmps/Chart/Chart\";\nimport { bitcoinService } from \"../../services/bitcoinService\";\nimport \"./StatisticPage.scss\";\n\nexport const StatisticPage = () => {\n  const [marketPrice, setMarketPrice] = useState(null);\n  const [marketPriceValues, getMarketPriceValues] = useState(null);\n\n  useEffect(() => {\n    const loadMarketPrice = async () => {\n      try {\n        const marketPrice = await bitcoinService.getMarketPrice();\n        setMarketPrice(marketPrice);\n        const values = marketPrice.values.map((value) => value.y);\n        getMarketPriceValues(values);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    loadMarketPrice();\n  }, []);\n\n  return (\n    marketPrice &&\n    marketPriceValues && (\n      <div>\n        <h1>Statistic page:</h1>\n        <Chart\n          title={marketPrice.name}\n          description={marketPrice.description}\n          data={marketPriceValues}\n          color={\"red\"}\n        />\n      </div>\n    )\n  );\n};\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { AppHeader } from \"./cmps/AppHeader/AppHeader\";\nimport { ContactDetailsPage } from \"./pages/ContactDetailsPage/ContactDetailsPage\";\nimport { ContactEditPage } from \"./pages/ContactEditPage/ContactEditPage\";\nimport { ContactPage } from \"./pages/ContactPage/ContactPage\";\nimport { HomePage } from \"./pages/HomePage/HomePage\";\nimport { SignupPage } from \"./pages/SignupPage/SignupPage\";\nimport { StatisticPage } from \"./pages/StatisticPage/StatisticPage\";\nimport \"./App.css\";\n\nexport const App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppHeader />\n        <Switch>\n          <Route component={ContactEditPage} path=\"/contact/edit/:id?\" />\n          <Route component={ContactDetailsPage} path=\"/contact/:id\" />\n          <Route component={ContactPage} path=\"/contact\" />\n          <Route component={StatisticPage} path=\"/statistic\" />\n          <Route component={SignupPage} path=\"/signup\" />\n          <Route component={HomePage} path=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\r\n  contacts: [],\r\n  currContact: null,\r\n};\r\n\r\nexport const contactReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CONTACTS\":\r\n      return {\r\n        ...state,\r\n        contacts: action.contacts,\r\n      };\r\n    case \"SET_CONTACT\": {\r\n      return {\r\n        ...state,\r\n        currContact: action.contact,\r\n      };\r\n    }\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.contact],\r\n      };\r\n    case \"REMOVE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact._id !== action.contactId\r\n        ),\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      const { ...updatedContact } = action;\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact._id === updatedContact._id ? updatedContact : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const INITIAL_STATE = {\r\n  user: null,\r\n};\r\n\r\nexport const userReducer = (state = INITIAL_STATE, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { contactReducer } from \"./reducers/contactReducer\";\r\nimport { userReducer } from \"./reducers/userReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n  contactReducer,\r\n  userReducer,\r\n});\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./store\";\nimport \"./assets/scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}